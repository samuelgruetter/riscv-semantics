#!/usr/bin/env python
# -*- coding: utf-8 -*-

# CAVEAT UTILITOR
#
# This file was automatically generated by TatSu.
#
#    https://pypi.python.org/pypi/tatsu/
#
# Any changes you make to it will be overwritten the next time
# the file is generated.

from __future__ import print_function, division, absolute_import, unicode_literals

from tatsu.objectmodel import Node
from tatsu.semantics import ModelBuilderSemantics


class TinyHaskellModelBuilderSemantics(ModelBuilderSemantics):
    def __init__(self):
        types = [
            t for t in globals().values()
            if type(t) is type and issubclass(t, ModelBase)
        ]
        super(TinyHaskellModelBuilderSemantics, self).__init__(types=types)


class ModelBase(Node):
    pass


class Module(ModelBase):
    decls = None
    imports = None
    name = None


class TypeDecl(ModelBase):
    name = None
    rhs = None


class ADTDecl(ModelBase):
    constructors = None
    name = None


class Constructor(ModelBase):
    args = None
    name = None


class FieldDecl(ModelBase):
    name = None
    type = None
